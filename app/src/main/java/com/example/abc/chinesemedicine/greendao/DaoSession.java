package com.example.abc.chinesemedicine.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import bean.AcuPoint;
import bean.ChineseMedicine;
import bean.ChinesePatentDrug;
import bean.ChinesePatentDrugSecondCategory;
import bean.Collection;
import bean.ErrorExamination;
import bean.Examination;
import bean.HotSearch;
import bean.LearningProgress;
import bean.MedicalBook;
import bean.Note;
import bean.Prescription;
import bean.SearchHistory;
import bean.User;
import bean.StudyTimeLine;

import com.example.abc.chinesemedicine.greendao.AcuPointDao;
import com.example.abc.chinesemedicine.greendao.ChineseMedicineDao;
import com.example.abc.chinesemedicine.greendao.ChinesePatentDrugDao;
import com.example.abc.chinesemedicine.greendao.ChinesePatentDrugSecondCategoryDao;
import com.example.abc.chinesemedicine.greendao.CollectionDao;
import com.example.abc.chinesemedicine.greendao.ErrorExaminationDao;
import com.example.abc.chinesemedicine.greendao.ExaminationDao;
import com.example.abc.chinesemedicine.greendao.HotSearchDao;
import com.example.abc.chinesemedicine.greendao.LearningProgressDao;
import com.example.abc.chinesemedicine.greendao.MedicalBookDao;
import com.example.abc.chinesemedicine.greendao.NoteDao;
import com.example.abc.chinesemedicine.greendao.PrescriptionDao;
import com.example.abc.chinesemedicine.greendao.SearchHistoryDao;
import com.example.abc.chinesemedicine.greendao.UserDao;
import com.example.abc.chinesemedicine.greendao.StudyTimeLineDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig acuPointDaoConfig;
    private final DaoConfig chineseMedicineDaoConfig;
    private final DaoConfig chinesePatentDrugDaoConfig;
    private final DaoConfig chinesePatentDrugSecondCategoryDaoConfig;
    private final DaoConfig collectionDaoConfig;
    private final DaoConfig errorExaminationDaoConfig;
    private final DaoConfig examinationDaoConfig;
    private final DaoConfig hotSearchDaoConfig;
    private final DaoConfig learningProgressDaoConfig;
    private final DaoConfig medicalBookDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig prescriptionDaoConfig;
    private final DaoConfig searchHistoryDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig studyTimeLineDaoConfig;

    private final AcuPointDao acuPointDao;
    private final ChineseMedicineDao chineseMedicineDao;
    private final ChinesePatentDrugDao chinesePatentDrugDao;
    private final ChinesePatentDrugSecondCategoryDao chinesePatentDrugSecondCategoryDao;
    private final CollectionDao collectionDao;
    private final ErrorExaminationDao errorExaminationDao;
    private final ExaminationDao examinationDao;
    private final HotSearchDao hotSearchDao;
    private final LearningProgressDao learningProgressDao;
    private final MedicalBookDao medicalBookDao;
    private final NoteDao noteDao;
    private final PrescriptionDao prescriptionDao;
    private final SearchHistoryDao searchHistoryDao;
    private final UserDao userDao;
    private final StudyTimeLineDao studyTimeLineDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        acuPointDaoConfig = daoConfigMap.get(AcuPointDao.class).clone();
        acuPointDaoConfig.initIdentityScope(type);

        chineseMedicineDaoConfig = daoConfigMap.get(ChineseMedicineDao.class).clone();
        chineseMedicineDaoConfig.initIdentityScope(type);

        chinesePatentDrugDaoConfig = daoConfigMap.get(ChinesePatentDrugDao.class).clone();
        chinesePatentDrugDaoConfig.initIdentityScope(type);

        chinesePatentDrugSecondCategoryDaoConfig = daoConfigMap.get(ChinesePatentDrugSecondCategoryDao.class).clone();
        chinesePatentDrugSecondCategoryDaoConfig.initIdentityScope(type);

        collectionDaoConfig = daoConfigMap.get(CollectionDao.class).clone();
        collectionDaoConfig.initIdentityScope(type);

        errorExaminationDaoConfig = daoConfigMap.get(ErrorExaminationDao.class).clone();
        errorExaminationDaoConfig.initIdentityScope(type);

        examinationDaoConfig = daoConfigMap.get(ExaminationDao.class).clone();
        examinationDaoConfig.initIdentityScope(type);

        hotSearchDaoConfig = daoConfigMap.get(HotSearchDao.class).clone();
        hotSearchDaoConfig.initIdentityScope(type);

        learningProgressDaoConfig = daoConfigMap.get(LearningProgressDao.class).clone();
        learningProgressDaoConfig.initIdentityScope(type);

        medicalBookDaoConfig = daoConfigMap.get(MedicalBookDao.class).clone();
        medicalBookDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        prescriptionDaoConfig = daoConfigMap.get(PrescriptionDao.class).clone();
        prescriptionDaoConfig.initIdentityScope(type);

        searchHistoryDaoConfig = daoConfigMap.get(SearchHistoryDao.class).clone();
        searchHistoryDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        studyTimeLineDaoConfig = daoConfigMap.get(StudyTimeLineDao.class).clone();
        studyTimeLineDaoConfig.initIdentityScope(type);

        acuPointDao = new AcuPointDao(acuPointDaoConfig, this);
        chineseMedicineDao = new ChineseMedicineDao(chineseMedicineDaoConfig, this);
        chinesePatentDrugDao = new ChinesePatentDrugDao(chinesePatentDrugDaoConfig, this);
        chinesePatentDrugSecondCategoryDao = new ChinesePatentDrugSecondCategoryDao(chinesePatentDrugSecondCategoryDaoConfig, this);
        collectionDao = new CollectionDao(collectionDaoConfig, this);
        errorExaminationDao = new ErrorExaminationDao(errorExaminationDaoConfig, this);
        examinationDao = new ExaminationDao(examinationDaoConfig, this);
        hotSearchDao = new HotSearchDao(hotSearchDaoConfig, this);
        learningProgressDao = new LearningProgressDao(learningProgressDaoConfig, this);
        medicalBookDao = new MedicalBookDao(medicalBookDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);
        prescriptionDao = new PrescriptionDao(prescriptionDaoConfig, this);
        searchHistoryDao = new SearchHistoryDao(searchHistoryDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        studyTimeLineDao = new StudyTimeLineDao(studyTimeLineDaoConfig, this);

        registerDao(AcuPoint.class, acuPointDao);
        registerDao(ChineseMedicine.class, chineseMedicineDao);
        registerDao(ChinesePatentDrug.class, chinesePatentDrugDao);
        registerDao(ChinesePatentDrugSecondCategory.class, chinesePatentDrugSecondCategoryDao);
        registerDao(Collection.class, collectionDao);
        registerDao(ErrorExamination.class, errorExaminationDao);
        registerDao(Examination.class, examinationDao);
        registerDao(HotSearch.class, hotSearchDao);
        registerDao(LearningProgress.class, learningProgressDao);
        registerDao(MedicalBook.class, medicalBookDao);
        registerDao(Note.class, noteDao);
        registerDao(Prescription.class, prescriptionDao);
        registerDao(SearchHistory.class, searchHistoryDao);
        registerDao(User.class, userDao);
        registerDao(StudyTimeLine.class, studyTimeLineDao);
    }
    
    public void clear() {
        acuPointDaoConfig.clearIdentityScope();
        chineseMedicineDaoConfig.clearIdentityScope();
        chinesePatentDrugDaoConfig.clearIdentityScope();
        chinesePatentDrugSecondCategoryDaoConfig.clearIdentityScope();
        collectionDaoConfig.clearIdentityScope();
        errorExaminationDaoConfig.clearIdentityScope();
        examinationDaoConfig.clearIdentityScope();
        hotSearchDaoConfig.clearIdentityScope();
        learningProgressDaoConfig.clearIdentityScope();
        medicalBookDaoConfig.clearIdentityScope();
        noteDaoConfig.clearIdentityScope();
        prescriptionDaoConfig.clearIdentityScope();
        searchHistoryDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        studyTimeLineDaoConfig.clearIdentityScope();
    }

    public AcuPointDao getAcuPointDao() {
        return acuPointDao;
    }

    public ChineseMedicineDao getChineseMedicineDao() {
        return chineseMedicineDao;
    }

    public ChinesePatentDrugDao getChinesePatentDrugDao() {
        return chinesePatentDrugDao;
    }

    public ChinesePatentDrugSecondCategoryDao getChinesePatentDrugSecondCategoryDao() {
        return chinesePatentDrugSecondCategoryDao;
    }

    public CollectionDao getCollectionDao() {
        return collectionDao;
    }

    public ErrorExaminationDao getErrorExaminationDao() {
        return errorExaminationDao;
    }

    public ExaminationDao getExaminationDao() {
        return examinationDao;
    }

    public HotSearchDao getHotSearchDao() {
        return hotSearchDao;
    }

    public LearningProgressDao getLearningProgressDao() {
        return learningProgressDao;
    }

    public MedicalBookDao getMedicalBookDao() {
        return medicalBookDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public PrescriptionDao getPrescriptionDao() {
        return prescriptionDao;
    }

    public SearchHistoryDao getSearchHistoryDao() {
        return searchHistoryDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public StudyTimeLineDao getStudyTimeLineDao() {
        return studyTimeLineDao;
    }

}
